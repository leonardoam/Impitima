
import trabalhobd.ButtonColumn;
import java.awt.Button;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.EventObject;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import trabalhobd.DBConnector;
import trabalhobd.DataManipulation;
import trabalhobd.DataSelection;
import trabalhobd.ErrorTranslator;
import trabalhobd.TableManipulator;
import trabalhobd.myTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

class myEditor extends DefaultCellEditor {
    public myEditor(JCheckBox checkBox) {
        super(checkBox);
    }
    @Override
    public boolean isCellEditable(EventObject anEvent) {
        return false;
    }
}

/**
 *
 * @author leonardo
 */
public class DBGUI extends javax.swing.JFrame {
    public static String[] estados = {"AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"};
    public static String[] tiposUrna = {"Eletrônica", "Manual"};
    public static String[] modelos = {"DRE", "VVPAT", "E2E"};
    public static String[] escolaridade = {null, "Ensino Fundamental Incompleto", "Ensino Fundamental Completo", "Ensino Médio Incompleto", "Ensino Médio Completo", "Ensino Superior Incompleto", "Ensino Superior Completo"};
    public static String[] tiposPessoa = {null, "Funcionário", "Candidato"};
    public static String[] cargosFuncionario = {"Mesário", "Presidente", "Secretário", "Suplente"};
    public DataManipulation dml;
    public DataSelection ds;
    
    /**
     * Creates new form DBGUI
     */
    public DBGUI() {
        initComponents();
        estadoZonaCria.setModel(new javax.swing.DefaultComboBoxModel(estados));
        tipoUrnaCria.setModel(new javax.swing.DefaultComboBoxModel(tiposUrna));
        modeloUrnaCria.setModel(new javax.swing.DefaultComboBoxModel(modelos));
        escolaridadePessoa.setModel(new javax.swing.DefaultComboBoxModel(escolaridade));
        tipoPessoa.setModel(new javax.swing.DefaultComboBoxModel(tiposPessoa));
        cargoFuncionario.setModel(new javax.swing.DefaultComboBoxModel(cargosFuncionario));
        
        try{
            DBConnector connector = new DBConnector("a7987265", "a7987265", true);
            if (!connector.test()){
                JOptionPane.showMessageDialog(null, "Problemas com a conexão.\n");
                return;
            }
            System.out.println("Conexão efetuada.");
            
            this.dml = new DataManipulation(connector);
            this.ds = new DataSelection(connector);
        }catch(SQLException e1){
            JOptionPane.showMessageDialog(null, "Problemas ao iniciar programa.\n"+e1.getMessage());
            return;
        } catch (ClassNotFoundException e2) {
            JOptionPane.showMessageDialog(null, "Problemas ao iniciar programa.\n"+e2.getMessage());
            return;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        registroPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        zonaPane = new javax.swing.JTabbedPane();
        inserePane = new javax.swing.JPanel();
        CriaPane = new javax.swing.JPanel();
        nroZonaLabelCria = new javax.swing.JLabel();
        numeroZonaCria = new javax.swing.JSpinner();
        estadoZonaLabelCria = new javax.swing.JLabel();
        estadoZonaCria = new javax.swing.JComboBox();
        endZonaLabelCria = new javax.swing.JLabel();
        enderecoZonaCria = new javax.swing.JTextField();
        insereZonaBotaoCria = new javax.swing.JButton();
        consultaPane = new javax.swing.JPanel();
        numeroZona2 = new javax.swing.JSpinner();
        atualizaZona = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaZona = new javax.swing.JTable();
        secaoPane = new javax.swing.JPanel();
        zonaPane1 = new javax.swing.JTabbedPane();
        inserePane1 = new javax.swing.JPanel();
        CriaPane1 = new javax.swing.JPanel();
        endSecaoLabelCria = new javax.swing.JLabel();
        localSecaoCria = new javax.swing.JTextField();
        insereSecaoBotaoCria = new javax.swing.JButton();
        nroSecaoLabelCria = new javax.swing.JLabel();
        numeroSecaoCria = new javax.swing.JSpinner();
        atualizaZonaSecao = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaZonaSecao = new javax.swing.JTable();
        consultaPane1 = new javax.swing.JPanel();
        numeroZona3 = new javax.swing.JSpinner();
        atualizaSecao = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaSecao = new javax.swing.JTable();
        urnaPane = new javax.swing.JPanel();
        urnaConsultaPane = new javax.swing.JTabbedPane();
        inserePane2 = new javax.swing.JPanel();
        CriaPane2 = new javax.swing.JPanel();
        tipoUrnaLabelCria = new javax.swing.JLabel();
        insereUrnaBotaoCria = new javax.swing.JButton();
        modeloUrnaLabelCria = new javax.swing.JLabel();
        atualizaSecaoUrna = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaSecaoUrna = new javax.swing.JTable();
        estadoZonaCria1 = new javax.swing.JComboBox();
        tipoUrnaCria = new javax.swing.JComboBox();
        modeloUrnaCria = new javax.swing.JComboBox();
        consultaPane2 = new javax.swing.JPanel();
        numeroZona4 = new javax.swing.JSpinner();
        atualizaUrna = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaUrna = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        CriaPane3 = new javax.swing.JPanel();
        inserePessoaCria = new javax.swing.JButton();
        atualizaSecaoPessoa = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabelaSecaoPessoa = new javax.swing.JTable();
        estadoZonaCria2 = new javax.swing.JComboBox();
        nroZonaLabelCria1 = new javax.swing.JLabel();
        nroZonaLabelCria2 = new javax.swing.JLabel();
        nroZonaLabelCria3 = new javax.swing.JLabel();
        nroZonaLabelCria4 = new javax.swing.JLabel();
        nroZonaLabelCria5 = new javax.swing.JLabel();
        nroZonaLabelCria6 = new javax.swing.JLabel();
        nroTitEleitorPessoa = new javax.swing.JFormattedTextField();
        nomePessoa = new javax.swing.JTextField();
        endPessoa = new javax.swing.JTextField();
        dataNascPessoa = new javax.swing.JFormattedTextField();
        escolaridadePessoa = new javax.swing.JComboBox();
        tipoPessoa = new javax.swing.JComboBox();
        CriaPane4 = new javax.swing.JPanel();
        atualizaPessoa = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tabelaPessoa = new javax.swing.JTable();
        estadoZonaCria3 = new javax.swing.JComboBox();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        CriaPane5 = new javax.swing.JPanel();
        tipoUrnaLabelCria2 = new javax.swing.JLabel();
        inserePartidoBotaoCria = new javax.swing.JButton();
        modeloUrnaLabelCria2 = new javax.swing.JLabel();
        numeroPartidoCria = new javax.swing.JSpinner();
        nomePartidoCria = new javax.swing.JTextField();
        modeloUrnaLabelCria3 = new javax.swing.JLabel();
        siglaPartidoCria = new javax.swing.JTextField();
        CriaPane6 = new javax.swing.JPanel();
        atualizaPartido = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        tabelaPartido = new javax.swing.JTable();
        estadoZonaCria5 = new javax.swing.JComboBox();
        pessoasPane = new javax.swing.JTabbedPane();
        filiacaoPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaPessoaFilia = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelaPartidoFilia = new javax.swing.JTable();
        filiaButton = new javax.swing.JButton();
        atualizaFilia = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tabelaFilia = new javax.swing.JTable();
        atualizarTabelaFilia = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tabelaFuncionario = new javax.swing.JTable();
        atualizaFuncionario = new javax.swing.JButton();
        cargoFuncionario = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        insereFuncionario = new javax.swing.JButton();
        alteraFuncionario = new javax.swing.JButton();
        deletaFuncionario = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        votosPane = new javax.swing.JTabbedPane();
        relatoriosPane = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nroZonaLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria.setText("Número da Zona Eleitoral*:");

        numeroZonaCria.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        numeroZonaCria.setToolTipText("min: 0 - max: 999");

        estadoZonaLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        estadoZonaLabelCria.setText("Estado da Zona Eleitoral*:");

        estadoZonaCria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        estadoZonaCria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoZonaCriaActionPerformed(evt);
            }
        });

        endZonaLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        endZonaLabelCria.setText("Endereço da Zona Eleitoral:");

        enderecoZonaCria.setToolTipText("max. num. characters: 200");

        insereZonaBotaoCria.setText("Insere");
        insereZonaBotaoCria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insereZonaBotaoCriaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout CriaPaneLayout = new javax.swing.GroupLayout(CriaPane);
        CriaPane.setLayout(CriaPaneLayout);
        CriaPaneLayout.setHorizontalGroup(
            CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CriaPaneLayout.createSequentialGroup()
                        .addComponent(endZonaLabelCria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enderecoZonaCria))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CriaPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(insereZonaBotaoCria))
                    .addGroup(CriaPaneLayout.createSequentialGroup()
                        .addGroup(CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CriaPaneLayout.createSequentialGroup()
                                .addComponent(estadoZonaLabelCria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(estadoZonaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CriaPaneLayout.createSequentialGroup()
                                .addComponent(nroZonaLabelCria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numeroZonaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 522, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CriaPaneLayout.setVerticalGroup(
            CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria)
                    .addComponent(numeroZonaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estadoZonaLabelCria)
                    .addComponent(estadoZonaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endZonaLabelCria)
                    .addComponent(enderecoZonaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insereZonaBotaoCria)
                .addContainerGap(351, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout inserePaneLayout = new javax.swing.GroupLayout(inserePane);
        inserePane.setLayout(inserePaneLayout);
        inserePaneLayout.setHorizontalGroup(
            inserePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inserePaneLayout.createSequentialGroup()
                .addComponent(CriaPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        inserePaneLayout.setVerticalGroup(
            inserePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CriaPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        zonaPane.addTab("Cria Nova", inserePane);

        numeroZona2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        numeroZona2.setToolTipText("min: 0 - max: 999");

        atualizaZona.setText("Procurar Dados");
        atualizaZona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaZonaMouseClicked(evt);
            }
        });

        tabelaZona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Zona*", "Estado da Zona*", "Endereço da Zona", "# Eleitores", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaZona);
        if (tabelaZona.getColumnModel().getColumnCount() > 0) {
            tabelaZona.getColumnModel().getColumn(0).setMinWidth(110);
            tabelaZona.getColumnModel().getColumn(1).setMinWidth(110);
            tabelaZona.getColumnModel().getColumn(2).setMinWidth(753);
            tabelaZona.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaZona.getColumnModel().getColumn(4).setMinWidth(90);
            tabelaZona.getColumnModel().getColumn(4).setHeaderValue("");
            tabelaZona.getColumnModel().getColumn(5).setMinWidth(90);
            tabelaZona.getColumnModel().getColumn(5).setHeaderValue("");
        }

        javax.swing.GroupLayout consultaPaneLayout = new javax.swing.GroupLayout(consultaPane);
        consultaPane.setLayout(consultaPaneLayout);
        consultaPaneLayout.setHorizontalGroup(
            consultaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaZona)
                .addGap(1282, 1282, 1282)
                .addComponent(numeroZona2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(consultaPaneLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        consultaPaneLayout.setVerticalGroup(
            consultaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroZona2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atualizaZona))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        zonaPane.addTab("Consulta", consultaPane);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zonaPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zonaPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        registroPane.addTab("Zona", jPanel3);

        endSecaoLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        endSecaoLabelCria.setText("Endereço da Seção Eleitoral:");

        localSecaoCria.setToolTipText("max. num. characters: 200");

        insereSecaoBotaoCria.setText("Insere");
        insereSecaoBotaoCria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insereSecaoBotaoCriaMouseClicked(evt);
            }
        });

        nroSecaoLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroSecaoLabelCria.setText("Número da Seção Eleitoral*:");

        numeroSecaoCria.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        numeroSecaoCria.setToolTipText("min: 0 - max: 999");

        atualizaZonaSecao.setText("Procurar Dados");
        atualizaZonaSecao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaZonaSecaoMouseClicked(evt);
            }
        });

        tabelaZonaSecao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Zona*", "Estado da Zona*", "Endereço da Zona", "# Eleitores"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabelaZonaSecao);
        if (tabelaZonaSecao.getColumnModel().getColumnCount() > 0) {
            tabelaZonaSecao.getColumnModel().getColumn(0).setMinWidth(110);
            tabelaZonaSecao.getColumnModel().getColumn(1).setMinWidth(110);
            tabelaZonaSecao.getColumnModel().getColumn(2).setMinWidth(753);
            tabelaZonaSecao.getColumnModel().getColumn(3).setMinWidth(100);
        }

        javax.swing.GroupLayout CriaPane1Layout = new javax.swing.GroupLayout(CriaPane1);
        CriaPane1.setLayout(CriaPane1Layout);
        CriaPane1Layout.setHorizontalGroup(
            CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CriaPane1Layout.createSequentialGroup()
                        .addComponent(nroSecaoLabelCria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numeroSecaoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(insereSecaoBotaoCria)
                        .addGroup(CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(atualizaZonaSecao)
                            .addGroup(CriaPane1Layout.createSequentialGroup()
                                .addComponent(endSecaoLabelCria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(localSecaoCria, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(495, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        CriaPane1Layout.setVerticalGroup(
            CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaZonaSecao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroSecaoLabelCria)
                    .addComponent(numeroSecaoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(CriaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endSecaoLabelCria)
                    .addComponent(localSecaoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insereSecaoBotaoCria)
                .addContainerGap())
        );

        javax.swing.GroupLayout inserePane1Layout = new javax.swing.GroupLayout(inserePane1);
        inserePane1.setLayout(inserePane1Layout);
        inserePane1Layout.setHorizontalGroup(
            inserePane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inserePane1Layout.createSequentialGroup()
                .addComponent(CriaPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        inserePane1Layout.setVerticalGroup(
            inserePane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CriaPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        zonaPane1.addTab("Cria Nova", inserePane1);

        numeroZona3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        numeroZona3.setToolTipText("min: 0 - max: 999");

        atualizaSecao.setText("Procurar Dados");
        atualizaSecao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaSecaoMouseClicked(evt);
            }
        });

        tabelaSecao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Zona*", "Estado da Zona*", "Número da Seção*", "Local da Seção", "# Eleitores", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaSecao);
        if (tabelaSecao.getColumnModel().getColumnCount() > 0) {
            tabelaSecao.getColumnModel().getColumn(0).setMinWidth(110);
            tabelaSecao.getColumnModel().getColumn(1).setMinWidth(110);
            tabelaSecao.getColumnModel().getColumn(2).setMinWidth(110);
            tabelaSecao.getColumnModel().getColumn(3).setMinWidth(733);
            tabelaSecao.getColumnModel().getColumn(4).setMinWidth(110);
            tabelaSecao.getColumnModel().getColumn(5).setMinWidth(90);
            tabelaSecao.getColumnModel().getColumn(5).setHeaderValue("");
            tabelaSecao.getColumnModel().getColumn(6).setMinWidth(90);
            tabelaSecao.getColumnModel().getColumn(6).setHeaderValue("");
        }

        javax.swing.GroupLayout consultaPane1Layout = new javax.swing.GroupLayout(consultaPane1);
        consultaPane1.setLayout(consultaPane1Layout);
        consultaPane1Layout.setHorizontalGroup(
            consultaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaSecao)
                .addGap(1282, 1282, 1282)
                .addComponent(numeroZona3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(consultaPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        consultaPane1Layout.setVerticalGroup(
            consultaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultaPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroZona3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atualizaSecao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        zonaPane1.addTab("Consulta", consultaPane1);

        javax.swing.GroupLayout secaoPaneLayout = new javax.swing.GroupLayout(secaoPane);
        secaoPane.setLayout(secaoPaneLayout);
        secaoPaneLayout.setHorizontalGroup(
            secaoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zonaPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        secaoPaneLayout.setVerticalGroup(
            secaoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zonaPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        registroPane.addTab("Seção", secaoPane);

        tipoUrnaLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tipoUrnaLabelCria.setText("Tipo da Urna Eleitoral:");

        insereUrnaBotaoCria.setText("Insere");
        insereUrnaBotaoCria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insereUrnaBotaoCriaMouseClicked(evt);
            }
        });

        modeloUrnaLabelCria.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        modeloUrnaLabelCria.setText("Modelo da Urna Eleitoral:");

        atualizaSecaoUrna.setText("Procurar Dados");
        atualizaSecaoUrna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaSecaoUrnaMouseClicked(evt);
            }
        });

        tabelaSecaoUrna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Zona*", "Estado da Zona*", "Número da Seção*", "Local da Seção", "# Eleitores"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tabelaSecaoUrna);
        if (tabelaSecaoUrna.getColumnModel().getColumnCount() > 0) {
            tabelaSecaoUrna.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaSecaoUrna.getColumnModel().getColumn(1).setMinWidth(182);
            tabelaSecaoUrna.getColumnModel().getColumn(2).setMinWidth(182);
            tabelaSecaoUrna.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaSecaoUrna.getColumnModel().getColumn(4).setMinWidth(100);
        }

        estadoZonaCria1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tipoUrnaCria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tipoUrnaCria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoUrnaCriaItemStateChanged(evt);
            }
        });

        modeloUrnaCria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout CriaPane2Layout = new javax.swing.GroupLayout(CriaPane2);
        CriaPane2.setLayout(CriaPane2Layout);
        CriaPane2Layout.setHorizontalGroup(
            CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(CriaPane2Layout.createSequentialGroup()
                            .addComponent(atualizaSecaoUrna)
                            .addGap(620, 620, 620))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CriaPane2Layout.createSequentialGroup()
                                .addComponent(tipoUrnaLabelCria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tipoUrnaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CriaPane2Layout.createSequentialGroup()
                                .addComponent(modeloUrnaLabelCria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modeloUrnaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(CriaPane2Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(insereUrnaBotaoCria)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CriaPane2Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        CriaPane2Layout.setVerticalGroup(
            CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CriaPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaSecaoUrna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoUrnaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoUrnaLabelCria))
                .addGap(7, 7, 7)
                .addGroup(CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeloUrnaCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modeloUrnaLabelCria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insereUrnaBotaoCria)
                .addGap(8, 8, 8))
            .addGroup(CriaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout inserePane2Layout = new javax.swing.GroupLayout(inserePane2);
        inserePane2.setLayout(inserePane2Layout);
        inserePane2Layout.setHorizontalGroup(
            inserePane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inserePane2Layout.createSequentialGroup()
                .addComponent(CriaPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        inserePane2Layout.setVerticalGroup(
            inserePane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CriaPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        urnaConsultaPane.addTab("Cria Nova", inserePane2);

        numeroZona4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        numeroZona4.setToolTipText("min: 0 - max: 999");

        atualizaUrna.setText("Procurar Dados");
        atualizaUrna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaUrnaMouseClicked(evt);
            }
        });

        tabelaUrna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Zona*", "Estado da Zona*", "Número da Seção*", "Número da Urna", "Modelo da Urna", "Tipo da Urna", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabelaUrna);

        javax.swing.GroupLayout consultaPane2Layout = new javax.swing.GroupLayout(consultaPane2);
        consultaPane2.setLayout(consultaPane2Layout);
        consultaPane2Layout.setHorizontalGroup(
            consultaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaUrna)
                .addGap(1282, 1282, 1282)
                .addComponent(numeroZona4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(consultaPane2Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        consultaPane2Layout.setVerticalGroup(
            consultaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consultaPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consultaPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroZona4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(atualizaUrna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        urnaConsultaPane.addTab("Consulta", consultaPane2);

        javax.swing.GroupLayout urnaPaneLayout = new javax.swing.GroupLayout(urnaPane);
        urnaPane.setLayout(urnaPaneLayout);
        urnaPaneLayout.setHorizontalGroup(
            urnaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(urnaConsultaPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        urnaPaneLayout.setVerticalGroup(
            urnaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(urnaConsultaPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        registroPane.addTab("Urna", urnaPane);

        inserePessoaCria.setText("Insere");
        inserePessoaCria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inserePessoaCriaMouseClicked(evt);
            }
        });
        inserePessoaCria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserePessoaCriaActionPerformed(evt);
            }
        });

        atualizaSecaoPessoa.setText("Procurar Dados");
        atualizaSecaoPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaSecaoPessoaMouseClicked(evt);
            }
        });
        atualizaSecaoPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaSecaoPessoaActionPerformed(evt);
            }
        });

        tabelaSecaoPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Zona*", "Estado da Zona*", "Número da Seção*", "Local da Seção", "# Eleitores"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tabelaSecaoPessoa);
        if (tabelaSecaoPessoa.getColumnModel().getColumnCount() > 0) {
            tabelaSecaoPessoa.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaSecaoPessoa.getColumnModel().getColumn(1).setMinWidth(182);
            tabelaSecaoPessoa.getColumnModel().getColumn(2).setMinWidth(182);
            tabelaSecaoPessoa.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaSecaoPessoa.getColumnModel().getColumn(4).setMinWidth(100);
        }

        estadoZonaCria2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        nroZonaLabelCria1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria1.setText("Número de Título de Eleitor*:");

        nroZonaLabelCria2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria2.setText("Nome:");

        nroZonaLabelCria3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria3.setText("Endereço:");

        nroZonaLabelCria4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria4.setText("Data de Nascimento:");

        nroZonaLabelCria5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria5.setText("Escolaridade:");

        nroZonaLabelCria6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        nroZonaLabelCria6.setText("Tipo:");

        try {
            nroTitEleitorPessoa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("############")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        nroTitEleitorPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nroTitEleitorPessoaActionPerformed(evt);
            }
        });

        nomePessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomePessoaActionPerformed(evt);
            }
        });

        endPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endPessoaActionPerformed(evt);
            }
        });

        dataNascPessoa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("d/M/yyyy"))));
        dataNascPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataNascPessoaActionPerformed(evt);
            }
        });

        escolaridadePessoa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        escolaridadePessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escolaridadePessoaActionPerformed(evt);
            }
        });

        tipoPessoa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tipoPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPessoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CriaPane3Layout = new javax.swing.GroupLayout(CriaPane3);
        CriaPane3.setLayout(CriaPane3Layout);
        CriaPane3Layout.setHorizontalGroup(
            CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CriaPane3Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CriaPane3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inserePessoaCria)
                .addContainerGap())
            .addGroup(CriaPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(CriaPane3Layout.createSequentialGroup()
                            .addComponent(nroZonaLabelCria4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dataNascPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CriaPane3Layout.createSequentialGroup()
                            .addComponent(nroZonaLabelCria5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(escolaridadePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CriaPane3Layout.createSequentialGroup()
                            .addComponent(nroZonaLabelCria6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CriaPane3Layout.createSequentialGroup()
                            .addComponent(nroZonaLabelCria1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nroTitEleitorPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CriaPane3Layout.createSequentialGroup()
                            .addComponent(nroZonaLabelCria3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(endPessoa))
                        .addGroup(CriaPane3Layout.createSequentialGroup()
                            .addComponent(nroZonaLabelCria2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(atualizaSecaoPessoa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        CriaPane3Layout.setVerticalGroup(
            CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CriaPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria1)
                    .addComponent(nroTitEleitorPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria2)
                    .addComponent(nomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria3)
                    .addComponent(endPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria4)
                    .addComponent(dataNascPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria5)
                    .addComponent(escolaridadePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nroZonaLabelCria6)
                    .addComponent(tipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizaSecaoPessoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inserePessoaCria)
                .addGap(13, 13, 13))
            .addGroup(CriaPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Cria Nova", CriaPane3);

        atualizaPessoa.setText("Procurar Dados");
        atualizaPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaPessoaMouseClicked(evt);
            }
        });

        tabelaPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título de Eleitor", "Nome", "Endereço", "Data de Nascimento", "Escolaridade", "Tipo", "Zona", "Estado", "Seção", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tabelaPessoa);
        if (tabelaPessoa.getColumnModel().getColumnCount() > 0) {
            tabelaPessoa.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaPessoa.getColumnModel().getColumn(1).setMinWidth(182);
            tabelaPessoa.getColumnModel().getColumn(2).setMinWidth(182);
            tabelaPessoa.getColumnModel().getColumn(3).setMinWidth(120);
            tabelaPessoa.getColumnModel().getColumn(4).setMinWidth(100);
            tabelaPessoa.getColumnModel().getColumn(5).setMinWidth(100);
            tabelaPessoa.getColumnModel().getColumn(6).setMinWidth(90);
            tabelaPessoa.getColumnModel().getColumn(7).setMinWidth(90);
            tabelaPessoa.getColumnModel().getColumn(8).setMinWidth(90);
            tabelaPessoa.getColumnModel().getColumn(9).setMinWidth(90);
            tabelaPessoa.getColumnModel().getColumn(10).setMinWidth(90);
            tabelaPessoa.getColumnModel().getColumn(10).setHeaderValue("");
        }

        estadoZonaCria3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout CriaPane4Layout = new javax.swing.GroupLayout(CriaPane4);
        CriaPane4.setLayout(CriaPane4Layout);
        CriaPane4Layout.setHorizontalGroup(
            CriaPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaPessoa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CriaPane4Layout.createSequentialGroup()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CriaPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        CriaPane4Layout.setVerticalGroup(
            CriaPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CriaPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaPessoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
            .addGroup(CriaPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Consulta", CriaPane4);

        registroPane.addTab("Pessoa", jTabbedPane1);

        tipoUrnaLabelCria2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tipoUrnaLabelCria2.setText("Número do Partido*:");

        inserePartidoBotaoCria.setText("Insere");
        inserePartidoBotaoCria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inserePartidoBotaoCriaMouseClicked(evt);
            }
        });

        modeloUrnaLabelCria2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        modeloUrnaLabelCria2.setText("Nome do Partido:");

        numeroPartidoCria.setModel(new javax.swing.SpinnerNumberModel(10, 10, 99, 1));
        numeroPartidoCria.setToolTipText("min: 10 - max: 99");

        nomePartidoCria.setToolTipText("max. num. characters: 200");

        modeloUrnaLabelCria3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        modeloUrnaLabelCria3.setText("Sigla do Partido:");

        siglaPartidoCria.setToolTipText("max. num. characters: 200");

        javax.swing.GroupLayout CriaPane5Layout = new javax.swing.GroupLayout(CriaPane5);
        CriaPane5.setLayout(CriaPane5Layout);
        CriaPane5Layout.setHorizontalGroup(
            CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CriaPane5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(inserePartidoBotaoCria))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CriaPane5Layout.createSequentialGroup()
                        .addGroup(CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modeloUrnaLabelCria2)
                            .addComponent(tipoUrnaLabelCria2)
                            .addComponent(modeloUrnaLabelCria3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CriaPane5Layout.createSequentialGroup()
                                .addComponent(siglaPartidoCria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(nomePartidoCria, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                            .addGroup(CriaPane5Layout.createSequentialGroup()
                                .addComponent(numeroPartidoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(547, 547, 547))
        );
        CriaPane5Layout.setVerticalGroup(
            CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoUrnaLabelCria2)
                    .addComponent(numeroPartidoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeloUrnaLabelCria2)
                    .addComponent(nomePartidoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(CriaPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeloUrnaLabelCria3)
                    .addComponent(siglaPartidoCria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inserePartidoBotaoCria)
                .addContainerGap(348, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Cria Nova", CriaPane5);

        atualizaPartido.setText("Procurar Dados");
        atualizaPartido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaPartidoMouseClicked(evt);
            }
        });

        tabelaPartido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número da Partido*", "Nome do Partido", "Sigla do Partido", "# Votos", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tabelaPartido);
        if (tabelaPartido.getColumnModel().getColumnCount() > 0) {
            tabelaPartido.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaPartido.getColumnModel().getColumn(1).setMinWidth(182);
            tabelaPartido.getColumnModel().getColumn(2).setMinWidth(182);
            tabelaPartido.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaPartido.getColumnModel().getColumn(4).setMinWidth(90);
            tabelaPartido.getColumnModel().getColumn(5).setMinWidth(90);
        }

        estadoZonaCria5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout CriaPane6Layout = new javax.swing.GroupLayout(CriaPane6);
        CriaPane6.setLayout(CriaPane6Layout);
        CriaPane6Layout.setHorizontalGroup(
            CriaPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriaPane6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaPartido)
                .addContainerGap(1168, Short.MAX_VALUE))
            .addComponent(jScrollPane11)
            .addGroup(CriaPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        CriaPane6Layout.setVerticalGroup(
            CriaPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CriaPane6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizaPartido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
            .addGroup(CriaPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(CriaPane6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(estadoZonaCria5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane3.addTab("Consulta", CriaPane6);

        registroPane.addTab("Partido", jTabbedPane3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registroPane)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registroPane)
        );

        MainPane.addTab("Registro", jPanel1);

        tabelaPessoaFilia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número Título Eleitor", "Nome", "Zona", "Estado", "Seção"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabelaPessoaFilia);
        if (tabelaPessoaFilia.getColumnModel().getColumnCount() > 0) {
            tabelaPessoaFilia.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaPessoaFilia.getColumnModel().getColumn(1).setMinWidth(410);
            tabelaPessoaFilia.getColumnModel().getColumn(2).setMinWidth(120);
            tabelaPessoaFilia.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaPessoaFilia.getColumnModel().getColumn(4).setMinWidth(410);
        }

        tabelaPartidoFilia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número Partido", "Nome Partido", "Sigla"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tabelaPartidoFilia);
        if (tabelaPartidoFilia.getColumnModel().getColumnCount() > 0) {
            tabelaPartidoFilia.getColumnModel().getColumn(0).setMinWidth(100);
            tabelaPartidoFilia.getColumnModel().getColumn(1).setMinWidth(380);
            tabelaPartidoFilia.getColumnModel().getColumn(2).setMinWidth(100);
        }

        filiaButton.setText("Filiar");
        filiaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filiaButtonMouseClicked(evt);
            }
        });

        atualizaFilia.setText("Procurar Dados");
        atualizaFilia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaFiliaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(atualizaFilia))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(filiaButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(atualizaFilia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filiaButton)
                .addGap(199, 199, 199))
        );

        filiacaoPane.addTab("Filiar", jPanel2);

        tabelaFilia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número Título Eleitor", "Nome do Eleitor", "Número Partido", "Sigla Partido", "Nome do Partido", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tabelaFilia);
        if (tabelaFilia.getColumnModel().getColumnCount() > 0) {
            tabelaFilia.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaFilia.getColumnModel().getColumn(1).setMinWidth(410);
            tabelaFilia.getColumnModel().getColumn(2).setMinWidth(120);
            tabelaFilia.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaFilia.getColumnModel().getColumn(4).setMinWidth(410);
            tabelaFilia.getColumnModel().getColumn(5).setMinWidth(100);
        }

        atualizarTabelaFilia.setText("Procurar Dados");
        atualizarTabelaFilia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizarTabelaFiliaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizarTabelaFilia)
                .addContainerGap(1168, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1285, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizarTabelaFilia)
                .addContainerGap(429, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addGap(0, 50, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        filiacaoPane.addTab("Consulta", jPanel4);

        pessoasPane.addTab("Filiação", filiacaoPane);

        tabelaFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título de Eleitor", "Nome", "Endereço", "Data de Nascimento", "Escolaridade", "Tipo", "Zona", "Estado", "Seção", "Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tabelaFuncionario);
        if (tabelaFuncionario.getColumnModel().getColumnCount() > 0) {
            tabelaFuncionario.getColumnModel().getColumn(0).setMinWidth(120);
            tabelaFuncionario.getColumnModel().getColumn(1).setMinWidth(182);
            tabelaFuncionario.getColumnModel().getColumn(2).setMinWidth(182);
            tabelaFuncionario.getColumnModel().getColumn(3).setMinWidth(120);
            tabelaFuncionario.getColumnModel().getColumn(4).setMinWidth(100);
            tabelaFuncionario.getColumnModel().getColumn(5).setMinWidth(100);
            tabelaFuncionario.getColumnModel().getColumn(6).setMinWidth(90);
            tabelaFuncionario.getColumnModel().getColumn(7).setMinWidth(90);
            tabelaFuncionario.getColumnModel().getColumn(8).setMinWidth(90);
            tabelaFuncionario.getColumnModel().getColumn(9).setMinWidth(90);
        }

        atualizaFuncionario.setText("Procurar Dados");
        atualizaFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaFuncionarioMouseClicked(evt);
            }
        });

        cargoFuncionario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Cargo do Funcionário:");

        insereFuncionario.setText("Insere Funcionário");
        insereFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insereFuncionarioMouseClicked(evt);
            }
        });

        alteraFuncionario.setText("Altera Funcionário");
        alteraFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alteraFuncionarioMouseClicked(evt);
            }
        });

        deletaFuncionario.setText("Deleta Funcionário");
        deletaFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletaFuncionarioMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(atualizaFuncionario))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cargoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(insereFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alteraFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletaFuncionario)))
                .addContainerGap(808, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addComponent(atualizaFuncionario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insereFuncionario)
                    .addComponent(alteraFuncionario)
                    .addComponent(deletaFuncionario))
                .addGap(46, 46, 46))
        );

        pessoasPane.addTab("Funcionários", jPanel6);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
        );

        pessoasPane.addTab("Candidatos", jPanel7);

        MainPane.addTab("Gerenciamento da Eleição", pessoasPane);
        MainPane.addTab("Votos", votosPane);
        MainPane.addTab("Relatórios", relatoriosPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void atualizaPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaPessoaMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllPessoa();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Pessoas.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }
       
        Action save = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                
                if (((String)tabelaPessoa.getValueAt(row, 3)) != null){
                    try {
                        java.util.Date date = new SimpleDateFormat("DD/MM/YYYY").parse((String)tabelaPessoa.getValueAt(row, 3));
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Data de Nascimento em formato inválido.\nPor favor, utilize o formato DD/MM/YYYY.\n"+ex.getMessage());
                        return;
                    }
                }
                
                try {
                    System.out.println(tabelaPessoa.getValueAt(row, 0)+" "+tabelaPessoa.getValueAt(row, 1)+" "+tabelaPessoa.getValueAt(row, 2)+" "+tabelaPessoa.getValueAt(row, 3)+" "+tabelaPessoa.getValueAt(row, 4)+" "+tabelaPessoa.getValueAt(row, 5)+" "+tabelaPessoa.getValueAt(row, 6)+" "+tabelaPessoa.getValueAt(row, 7)+" "+tabelaPessoa.getValueAt(row, 8));
                    dml.updatePessoa((String)tabelaPessoa.getValueAt(row, 0), (String)tabelaPessoa.getValueAt(row, 1), (String)tabelaPessoa.getValueAt(row, 2), (String)tabelaPessoa.getValueAt(row, 3), (String)tabelaPessoa.getValueAt(row, 4), (String)tabelaPessoa.getValueAt(row, 5), (String)tabelaPessoa.getValueAt(row, 6), (String)tabelaPessoa.getValueAt(row, 7), (String)tabelaPessoa.getValueAt(row, 8));
                    JOptionPane.showMessageDialog(null, "Valor atualizado com sucesso.\n");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao atualizar Pessoa.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };
        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.deletePessoa((String)tabelaPessoa.getValueAt(row, 0));
                    JOptionPane.showMessageDialog(null, "Valor deletado com sucesso.\n");
                    ((DefaultTableModel)table.getModel()).removeRow(row);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao deletar Pessoa.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };

        TableManipulator.setNewModel(tabelaPessoa, new int[]{0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1});
        TableManipulator.fillTable(tabelaPessoa, res, new int[]{9, 10}, new String[]{"save", "delete"}, new Action[]{save, delete});
        TableManipulator.adjustColumnWidth(tabelaPessoa, new int[]{120, 182, 182, 120, 100, 100, 90, 90, 90, 90, 90});
        TableManipulator.centralizeColumns(tabelaPessoa, new int[]{3, 4, 5, 6, 7, 8});
    }//GEN-LAST:event_atualizaPessoaMouseClicked

    private void atualizaSecaoPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaSecaoPessoaMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllSecao();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Seções Eleitorais.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }
        
        TableManipulator.setNewModel(tabelaSecaoPessoa, new int[]{0, 0, 0, 0, 0});
        TableManipulator.fillTable(tabelaSecaoPessoa, res, new int[]{}, new String[]{}, new Action[]{});
        TableManipulator.centralizeColumns(tabelaSecaoPessoa, new int[]{0, 1, 2, 4});
        TableManipulator.adjustColumnWidth(tabelaSecaoPessoa, new int[]{120, 182, 182, 100, 100});
        tabelaSecaoPessoa.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_atualizaSecaoPessoaMouseClicked

    private void inserePessoaCriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inserePessoaCriaMouseClicked
        if (!dataNascPessoa.getText().isEmpty()){
            try {
                java.util.Date date = new SimpleDateFormat("DD/MM/YYYY").parse(dataNascPessoa.getText());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Data de Nascimento em formato inválido.\nPor favor, utilize o formato DD/MM/YYYY.\n"+ex.getMessage());
                return;
            }
        }
        if (!nroTitEleitorPessoa.getText().matches("^\\d{12}$")){
            JOptionPane.showMessageDialog(null, "Numero de título de eleitor inválido.\n");
            return;
        }
        if (tabelaSecaoPessoa.getSelectedRowCount() != 1){
            JOptionPane.showMessageDialog(null, "Selecione uma Seção Eleitoral, antes de prosseguir.\n");
            return;
        }
        
        try {
            dml.inserePessoa(nroTitEleitorPessoa.getText(), nomePessoa.getText(), endPessoa.getText(), (String)dataNascPessoa.getText(), (String)escolaridadePessoa.getSelectedItem(), (String)tipoPessoa.getSelectedItem(), (String)tabelaSecaoPessoa.getValueAt(tabelaSecaoPessoa.getSelectedRow(), 0), (String)tabelaSecaoPessoa.getValueAt(tabelaSecaoPessoa.getSelectedRow(), 1), (String)tabelaSecaoPessoa.getValueAt(tabelaSecaoPessoa.getSelectedRow(), 2));
            JOptionPane.showMessageDialog(null, "Pessoa inserida com sucesso.\n");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao inserir Pessoa.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_inserePessoaCriaMouseClicked

    private void atualizaUrnaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaUrnaMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllUrna();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Seções Eleitorais.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }
        
        DefaultTableModel model = new myTableModel(new int[]{0, 0, 0, 0, 1, 1, 1, 1});

        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.deleteUrna((String)tabelaUrna.getValueAt(row, 0), (String)tabelaUrna.getValueAt(row, 1), (String)tabelaUrna.getValueAt(row, 2), (String)tabelaUrna.getValueAt(row, 3));
                    JOptionPane.showMessageDialog(null, "Valor deletado com sucesso.\n");
                    ((DefaultTableModel)table.getModel()).removeRow(row);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao deletar Seção Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };

        TableManipulator.setNewModel(tabelaUrna, new int[]{0, 0, 0, 0, 0, 0, 1});
        TableManipulator.fillTable(tabelaUrna, res, new int[]{6}, new String[]{"delete"}, new Action[]{delete});
        TableManipulator.centralizeColumns(tabelaUrna, new int[]{0, 1, 2, 3, 4, 5});
        //TableManipulator.adjustColumnWidth(tabelaUrna, new int[]{});
    }//GEN-LAST:event_atualizaUrnaMouseClicked

    private void tipoUrnaCriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoUrnaCriaItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            modeloUrnaCria.removeAllItems();
            if("Eletrônica".equals((String)tipoUrnaCria.getSelectedItem())){
                modeloUrnaCria.addItem(modelos[0]);
                modeloUrnaCria.addItem(modelos[1]);
                modeloUrnaCria.addItem(modelos[2]);
            }
        }
    }//GEN-LAST:event_tipoUrnaCriaItemStateChanged

    private void atualizaSecaoUrnaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaSecaoUrnaMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllSecao();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Seções Eleitorais.\n"+ErrorTranslator.translate("Seção", ex));
            return;
        }
        TableManipulator.setNewModel(tabelaSecaoUrna, new int[]{0, 0, 0, 0, 0});
        TableManipulator.fillTable(tabelaSecaoUrna, res, new int[]{}, new String[]{}, new Action[]{});
        TableManipulator.adjustColumnWidth(tabelaSecaoUrna, new int[]{110, 110, 110, 733, 110});
        TableManipulator.centralizeColumns(tabelaSecaoUrna, new int[]{0, 1, 2, 4});
        tabelaSecaoUrna.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_atualizaSecaoUrnaMouseClicked

    private void insereUrnaBotaoCriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insereUrnaBotaoCriaMouseClicked
        if (tabelaSecaoUrna.getSelectedRowCount() != 1){
            JOptionPane.showMessageDialog(null, "Selecione uma Zona Eleitoral, antes de prosseguir.\n");
            return;
        }
        try {
            dml.insereUrna((String)tabelaSecaoUrna.getValueAt(tabelaSecaoUrna.getSelectedRow(), 0), (String)tabelaSecaoUrna.getValueAt(tabelaSecaoUrna.getSelectedRow(), 1), (String)tabelaSecaoUrna.getValueAt(tabelaSecaoUrna.getSelectedRow(), 2), (String)tipoUrnaCria.getSelectedItem(), (String)modeloUrnaCria.getSelectedItem());
            JOptionPane.showMessageDialog(null, "Valor inserido com sucesso.\n");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao inserir Urna Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_insereUrnaBotaoCriaMouseClicked

    private void atualizaSecaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaSecaoMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllSecao();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Seções Eleitorais.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }

        Action save = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.updateSecao((String)tabelaSecao.getValueAt(row, 0), (String)tabelaSecao.getValueAt(row, 1), (String)tabelaSecao.getValueAt(row, 2), (String)tabelaSecao.getValueAt(row, 3));
                    JOptionPane.showMessageDialog(null, "Valor atualizado com sucesso.\n");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao atualizar Seção Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };
        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.deleteSecao((String)tabelaSecao.getValueAt(row, 0), (String)tabelaSecao.getValueAt(row, 1), (String)tabelaSecao.getValueAt(row, 2));
                    JOptionPane.showMessageDialog(null, "Valor deletado com sucesso.\n");
                    ((DefaultTableModel)table.getModel()).removeRow(row);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao deletar Seção Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };

        TableManipulator.setNewModel(tabelaSecao, new int[]{0, 0, 0, 1, 0, 1, 1});
        TableManipulator.fillTable(tabelaSecao, res, new int[]{5, 6}, new String[]{"Salvar", "Deletar"}, new Action[]{save, delete});
        TableManipulator.adjustColumnWidth(tabelaSecao, new int[]{110, 110, 110, 533, 110, 90, 90});
        TableManipulator.centralizeColumns(tabelaSecao, new int[]{0, 1, 2, 4});
    }//GEN-LAST:event_atualizaSecaoMouseClicked

    private void atualizaZonaSecaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaZonaSecaoMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllZonas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Zonas Eleitorais.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }
        
        TableManipulator.setNewModel(tabelaZonaSecao, new int[]{0, 0, 0, 0});
        TableManipulator.fillTable(tabelaZonaSecao, res, new int[]{}, new String[]{}, new Action[]{});
        TableManipulator.adjustColumnWidth(tabelaZonaSecao, new int[]{110, 110, 753, 110});
        TableManipulator.centralizeColumns(tabelaZonaSecao, new int[]{0, 1, 3});

        tabelaZonaSecao.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_atualizaZonaSecaoMouseClicked

    private void insereSecaoBotaoCriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insereSecaoBotaoCriaMouseClicked
        if (localSecaoCria.getText().length() > 200){
            JOptionPane.showMessageDialog(null, "Local inserido é muito grande. (# max. characteres: 200)\n");
            return;
        }
        
        if (tabelaZonaSecao.getSelectedRowCount() != 1){
            JOptionPane.showMessageDialog(null, "Selecione uma Zona Eleitoral, antes de prosseguir.\n");
            return;
        }
        try {
            dml.insereSecao((String)tabelaZonaSecao.getValueAt(tabelaZonaSecao.getSelectedRow(), 0), (String)tabelaZonaSecao.getValueAt(tabelaZonaSecao.getSelectedRow(), 1), numeroSecaoCria.getValue().toString(), (String)localSecaoCria.getText());
            JOptionPane.showMessageDialog(null, "Valor inserido com sucesso.\n");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao inserir Seção Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_insereSecaoBotaoCriaMouseClicked

    private void atualizaZonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaZonaMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllZonas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Zonas Eleitorais.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }
        
        Action save = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.updateZona((String)tabelaZona.getValueAt(row, 0), (String)tabelaZona.getValueAt(row, 1), (String)tabelaZona.getValueAt(row, 2));
                    JOptionPane.showMessageDialog(null, "Valor atualizado com sucesso.\n");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao atualizar Zona Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };
        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.deleteZona((String)tabelaZona.getValueAt(row, 0), (String)tabelaZona.getValueAt(row, 1));
                    JOptionPane.showMessageDialog(null, "Valor deletado com sucesso.\n");
                    ((DefaultTableModel)table.getModel()).removeRow(row);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao deletar Zona Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };

        TableManipulator.setNewModel(tabelaZona, new int[]{0, 0, 1, 0, 1, 1});
        TableManipulator.fillTable(tabelaZona, res, new int[]{4,5}, new String[]{"save", "delete"}, new Action[]{save, delete});
        TableManipulator.adjustColumnWidth(tabelaZona, new int[]{110, 110, 753, 110, 90, 90});
        TableManipulator.centralizeColumns(tabelaZona, new int[]{0, 1, 3});
    }//GEN-LAST:event_atualizaZonaMouseClicked

    private void insereZonaBotaoCriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insereZonaBotaoCriaMouseClicked
        if (enderecoZonaCria.getText().length() > 200){
            JOptionPane.showMessageDialog(null, "Endereço inserido é muito grande. (# max. characteres: 200)\n");
            return;
        }
        
        try {
            dml.insereZona(numeroZonaCria.getValue().toString(), (String)estadoZonaCria.getSelectedItem(), (String)enderecoZonaCria.getText());
            JOptionPane.showMessageDialog(null, "Valor inserido com sucesso.\n");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao inserir Zona Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_insereZonaBotaoCriaMouseClicked

    private void estadoZonaCriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoZonaCriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estadoZonaCriaActionPerformed

    private void atualizaPartidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaPartidoMouseClicked
        ResultSet res;
        try {
            res = ds.selectAllPartido();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Partidos.\n"+ErrorTranslator.translate("Zona", ex));
            return;
        }

        Action save = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.updatePartido((String)tabelaPartido.getValueAt(row, 0), (String)tabelaPartido.getValueAt(row, 1), (String)tabelaPartido.getValueAt(row, 2));
                    JOptionPane.showMessageDialog(null, "Valor atualizado com sucesso.\n");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao atualizar Partido.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };
        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.deletePartido((String)tabelaPartido.getValueAt(row, 0));
                    JOptionPane.showMessageDialog(null, "Valor deletado com sucesso.\n");
                    ((DefaultTableModel)table.getModel()).removeRow(row);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao deletar Partido.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };

        TableManipulator.setNewModel(tabelaPartido, new int[]{0, 1, 1, 0, 1, 1});
        TableManipulator.fillTable(tabelaPartido, res, new int[]{4, 5}, new String[]{"save", "delete"}, new Action[]{save, delete});
        TableManipulator.adjustColumnWidth(tabelaPartido, new int[]{120, 705, 100, 100, 90, 90});
        TableManipulator.centralizeColumns(tabelaPartido, new int[]{0, 2, 3});
    }//GEN-LAST:event_atualizaPartidoMouseClicked

    private void inserePartidoBotaoCriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inserePartidoBotaoCriaMouseClicked
        if (nomePartidoCria.getText().length() > 200){
            JOptionPane.showMessageDialog(null, "Nome do partido inserido é muito grande. (# max. characteres: 100)\n");
            return;
        }
        if (siglaPartidoCria.getText().length() > 5){
            JOptionPane.showMessageDialog(null, "Sigla do partido inserido é muito grande. (# max. characteres: 5)\n");
            return;
        }
        
        try {
            dml.inserePartido(numeroPartidoCria.getValue().toString(), nomePartidoCria.getText(), siglaPartidoCria.getText());
            JOptionPane.showMessageDialog(null, "Valor inserido com sucesso.\n");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao inserir Zona Eleitoral.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_inserePartidoBotaoCriaMouseClicked

    private void nroTitEleitorPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nroTitEleitorPessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nroTitEleitorPessoaActionPerformed

    private void nomePessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomePessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomePessoaActionPerformed

    private void endPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endPessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endPessoaActionPerformed

    private void dataNascPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataNascPessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataNascPessoaActionPerformed

    private void escolaridadePessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escolaridadePessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_escolaridadePessoaActionPerformed

    private void tipoPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoPessoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoPessoaActionPerformed

    private void atualizaSecaoPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaSecaoPessoaActionPerformed
        
    }//GEN-LAST:event_atualizaSecaoPessoaActionPerformed

    private void inserePessoaCriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserePessoaCriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inserePessoaCriaActionPerformed

    private void atualizaFiliaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaFiliaMouseClicked
        ResultSet pessoas, partidos;
        try {
            pessoas = ds.selectAllPessoa();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Pessoas.\n"+ErrorTranslator.translate("Seção", ex));
            return;
        }
        try {
            partidos = ds.selectAllPartido();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Partidos.\n"+ErrorTranslator.translate("Seção", ex));
            return;
        }
        
        TableManipulator.setNewModel(tabelaPessoaFilia, new int[]{0, 0, 0, 0, 0});
        TableManipulator.fillTable(tabelaPessoaFilia, pessoas, new int[]{1, 2, 7, 8, 9}, new int[]{}, new String[]{}, new Action[]{});
        TableManipulator.adjustColumnWidth(tabelaPessoaFilia, new int[]{120, 260, 60, 60, 60});
        TableManipulator.centralizeColumns(tabelaPessoaFilia, new int[]{0, 2, 3, 4});
        tabelaPessoaFilia.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        TableManipulator.setNewModel(tabelaPartidoFilia, new int[]{0, 0, 0});
        TableManipulator.fillTable(tabelaPartidoFilia, partidos, new int[]{1, 2, 3}, new int[]{}, new String[]{}, new Action[]{});
        TableManipulator.adjustColumnWidth(tabelaPartidoFilia, new int[]{100, 380, 100});
        TableManipulator.centralizeColumns(tabelaPartidoFilia, new int[]{0, 2});
        tabelaPartidoFilia.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_atualizaFiliaMouseClicked

    private void filiaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filiaButtonMouseClicked
        if (tabelaPessoaFilia.getSelectedRowCount() != 1){
            JOptionPane.showMessageDialog(null, "Selecione uma pessoa antes de prosseguir.\n");
            return;
        }
        if (tabelaPartidoFilia.getSelectedRowCount() != 1){
            JOptionPane.showMessageDialog(null, "Selecione um partido antes de prosseguir.\n");
            return;
        }
        try {
            dml.insereFilia((String)tabelaPessoaFilia.getValueAt(tabelaPessoaFilia.getSelectedRow(), 0), (String)tabelaPartidoFilia.getValueAt(tabelaPartidoFilia.getSelectedRow(), 0));
            JOptionPane.showMessageDialog(null, "Eleitor filiado com sucesso.\n");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas um filiar pessoa a partido.\n"+ErrorTranslator.translate(null, ex));
        }
    }//GEN-LAST:event_filiaButtonMouseClicked

    private void atualizarTabelaFiliaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizarTabelaFiliaMouseClicked
        ResultSet rs;
        try {
            rs = ds.selectAllFilia();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Filiacoes\n"+ErrorTranslator.translate("Seção", ex));
            return;
        }
        
        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int row = Integer.valueOf(e.getActionCommand());
                try {
                    dml.deleteFilia((String)tabelaFilia.getValueAt(row, 0));
                    JOptionPane.showMessageDialog(null, "Valor deletado com sucesso.\n");
                    ((DefaultTableModel)table.getModel()).removeRow(row);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao deletar Filiaçao.\n"+ErrorTranslator.translate("Zona", ex));
                }
            }
        };
        
        TableManipulator.setNewModel(tabelaFilia, new int[]{0, 0, 0, 0, 0, 1});
        TableManipulator.fillTable(tabelaFilia, rs, new int[]{5}, new String[]{"delete"}, new Action[]{delete});
        TableManipulator.adjustColumnWidth(tabelaFilia, new int[]{120, 410, 120, 100, 410, 100});
        TableManipulator.centralizeColumns(tabelaFilia, new int[]{0, 2, 3, 4});
    }//GEN-LAST:event_atualizarTabelaFiliaMouseClicked

    private void atualizaFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaFuncionarioMouseClicked
        ResultSet rs;
        try {
            rs = ds.selectAllFuncionario();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao selecionar Funcionarios\n"+ErrorTranslator.translate("Seção", ex));
            return;
        }
        
        TableManipulator.setNewModel(tabelaFuncionario, new int[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0});
        TableManipulator.fillTableFuncionario(tabelaFuncionario, rs, new int[]{}, new String[]{}, new Action[]{});
        TableManipulator.adjustColumnWidth(tabelaFuncionario, new int[]{120, 182, 182, 120, 100, 100, 90, 90, 90, 90});
        TableManipulator.centralizeColumns(tabelaFuncionario, new int[]{0, 2, 3, 4, 5, 6, 7, 8, 9});
        tabelaFuncionario.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_atualizaFuncionarioMouseClicked

    private void insereFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insereFuncionarioMouseClicked
        int row = tabelaFuncionario.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma pessoa antes de prosseguir.\n");
            return;
        }
        try {
            dml.insereFuncionario((String)tabelaFuncionario.getValueAt(row, 0), (String)cargoFuncionario.getSelectedItem(), (String)tabelaFuncionario.getValueAt(row, 6), (String)tabelaFuncionario.getValueAt(row, 7), (String)tabelaFuncionario.getValueAt(row, 8));
            JOptionPane.showMessageDialog(null, "Valor inserido com sucesso.\n");
            atualizaFuncionarioMouseClicked(null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao inserir Funcionário.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_insereFuncionarioMouseClicked

    private void deletaFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletaFuncionarioMouseClicked
        int row = tabelaFuncionario.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma pessoa antes de prosseguir.\n");
            return;
        }
        try {
            dml.deleteFuncionario((String)tabelaFuncionario.getValueAt(row, 0));
            JOptionPane.showMessageDialog(null, "Valor removido com sucesso.\n");
            atualizaFuncionarioMouseClicked(null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao remover Funcionário.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_deletaFuncionarioMouseClicked

    private void alteraFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alteraFuncionarioMouseClicked
        int row = tabelaFuncionario.getSelectedRow();
        if (row == -1){
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma pessoa antes de prosseguir.\n");
            return;
        }
        try {
            dml.updateFuncionario((String)tabelaFuncionario.getValueAt(row, 0), (String)cargoFuncionario.getSelectedItem());
            JOptionPane.showMessageDialog(null, "Valor alterado com sucesso.\n");
            atualizaFuncionarioMouseClicked(null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao alterar Funcionário.\n"+ErrorTranslator.translate("Zona", ex));
        }
    }//GEN-LAST:event_alteraFuncionarioMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBGUI().setVisible(true);
            }
        });
                
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CriaPane;
    private javax.swing.JPanel CriaPane1;
    private javax.swing.JPanel CriaPane2;
    private javax.swing.JPanel CriaPane3;
    private javax.swing.JPanel CriaPane4;
    private javax.swing.JPanel CriaPane5;
    private javax.swing.JPanel CriaPane6;
    private javax.swing.JTabbedPane MainPane;
    private javax.swing.JButton alteraFuncionario;
    private javax.swing.JButton atualizaFilia;
    private javax.swing.JButton atualizaFuncionario;
    private javax.swing.JButton atualizaPartido;
    private javax.swing.JButton atualizaPessoa;
    private javax.swing.JButton atualizaSecao;
    private javax.swing.JButton atualizaSecaoPessoa;
    private javax.swing.JButton atualizaSecaoUrna;
    private javax.swing.JButton atualizaUrna;
    private javax.swing.JButton atualizaZona;
    private javax.swing.JButton atualizaZonaSecao;
    private javax.swing.JButton atualizarTabelaFilia;
    private javax.swing.JComboBox cargoFuncionario;
    private javax.swing.JPanel consultaPane;
    private javax.swing.JPanel consultaPane1;
    private javax.swing.JPanel consultaPane2;
    private javax.swing.JFormattedTextField dataNascPessoa;
    private javax.swing.JButton deletaFuncionario;
    private javax.swing.JTextField endPessoa;
    private javax.swing.JLabel endSecaoLabelCria;
    private javax.swing.JLabel endZonaLabelCria;
    private javax.swing.JTextField enderecoZonaCria;
    private javax.swing.JComboBox escolaridadePessoa;
    private javax.swing.JComboBox estadoZonaCria;
    private javax.swing.JComboBox estadoZonaCria1;
    private javax.swing.JComboBox estadoZonaCria2;
    private javax.swing.JComboBox estadoZonaCria3;
    private javax.swing.JComboBox estadoZonaCria5;
    private javax.swing.JLabel estadoZonaLabelCria;
    private javax.swing.JButton filiaButton;
    private javax.swing.JTabbedPane filiacaoPane;
    private javax.swing.JButton insereFuncionario;
    private javax.swing.JPanel inserePane;
    private javax.swing.JPanel inserePane1;
    private javax.swing.JPanel inserePane2;
    private javax.swing.JButton inserePartidoBotaoCria;
    private javax.swing.JButton inserePessoaCria;
    private javax.swing.JButton insereSecaoBotaoCria;
    private javax.swing.JButton insereUrnaBotaoCria;
    private javax.swing.JButton insereZonaBotaoCria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField localSecaoCria;
    private javax.swing.JComboBox modeloUrnaCria;
    private javax.swing.JLabel modeloUrnaLabelCria;
    private javax.swing.JLabel modeloUrnaLabelCria2;
    private javax.swing.JLabel modeloUrnaLabelCria3;
    private javax.swing.JTextField nomePartidoCria;
    private javax.swing.JTextField nomePessoa;
    private javax.swing.JLabel nroSecaoLabelCria;
    private javax.swing.JFormattedTextField nroTitEleitorPessoa;
    private javax.swing.JLabel nroZonaLabelCria;
    private javax.swing.JLabel nroZonaLabelCria1;
    private javax.swing.JLabel nroZonaLabelCria2;
    private javax.swing.JLabel nroZonaLabelCria3;
    private javax.swing.JLabel nroZonaLabelCria4;
    private javax.swing.JLabel nroZonaLabelCria5;
    private javax.swing.JLabel nroZonaLabelCria6;
    private javax.swing.JSpinner numeroPartidoCria;
    private javax.swing.JSpinner numeroSecaoCria;
    private javax.swing.JSpinner numeroZona2;
    private javax.swing.JSpinner numeroZona3;
    private javax.swing.JSpinner numeroZona4;
    private javax.swing.JSpinner numeroZonaCria;
    private javax.swing.JTabbedPane pessoasPane;
    private javax.swing.JTabbedPane registroPane;
    private javax.swing.JTabbedPane relatoriosPane;
    private javax.swing.JPanel secaoPane;
    private javax.swing.JTextField siglaPartidoCria;
    private javax.swing.JTable tabelaFilia;
    private javax.swing.JTable tabelaFuncionario;
    private javax.swing.JTable tabelaPartido;
    private javax.swing.JTable tabelaPartidoFilia;
    private javax.swing.JTable tabelaPessoa;
    private javax.swing.JTable tabelaPessoaFilia;
    private javax.swing.JTable tabelaSecao;
    private javax.swing.JTable tabelaSecaoPessoa;
    private javax.swing.JTable tabelaSecaoUrna;
    private javax.swing.JTable tabelaUrna;
    private javax.swing.JTable tabelaZona;
    private javax.swing.JTable tabelaZonaSecao;
    private javax.swing.JComboBox tipoPessoa;
    private javax.swing.JComboBox tipoUrnaCria;
    private javax.swing.JLabel tipoUrnaLabelCria;
    private javax.swing.JLabel tipoUrnaLabelCria2;
    private javax.swing.JTabbedPane urnaConsultaPane;
    private javax.swing.JPanel urnaPane;
    private javax.swing.JTabbedPane votosPane;
    private javax.swing.JTabbedPane zonaPane;
    private javax.swing.JTabbedPane zonaPane1;
    // End of variables declaration//GEN-END:variables
}
